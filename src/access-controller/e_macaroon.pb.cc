// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: e_macaroon.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "e_macaroon.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace macaroons {

namespace {

const ::google::protobuf::Descriptor* e_macaroon_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  e_macaroon_reflection_ = NULL;
const ::google::protobuf::Descriptor* e_macaroon_Endorsement_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  e_macaroon_Endorsement_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_e_5fmacaroon_2eproto() {
  protobuf_AddDesc_e_5fmacaroon_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "e_macaroon.proto");
  GOOGLE_CHECK(file != NULL);
  e_macaroon_descriptor_ = file->message_type(0);
  static const int e_macaroon_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon, macaroon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon, endorsements_),
  };
  e_macaroon_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      e_macaroon_descriptor_,
      e_macaroon::default_instance_,
      e_macaroon_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon, _has_bits_[0]),
      -1,
      -1,
      sizeof(e_macaroon),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon, _internal_metadata_),
      -1);
  e_macaroon_Endorsement_descriptor_ = e_macaroon_descriptor_->nested_type(0);
  static const int e_macaroon_Endorsement_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, kind_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, certname_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, hash_),
  };
  e_macaroon_Endorsement_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      e_macaroon_Endorsement_descriptor_,
      e_macaroon_Endorsement::default_instance_,
      e_macaroon_Endorsement_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, _has_bits_[0]),
      -1,
      -1,
      sizeof(e_macaroon_Endorsement),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(e_macaroon_Endorsement, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_e_5fmacaroon_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      e_macaroon_descriptor_, &e_macaroon::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      e_macaroon_Endorsement_descriptor_, &e_macaroon_Endorsement::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_e_5fmacaroon_2eproto() {
  delete e_macaroon::default_instance_;
  delete e_macaroon_reflection_;
  delete e_macaroon_Endorsement::default_instance_;
  delete e_macaroon_Endorsement_reflection_;
}

void protobuf_AddDesc_e_5fmacaroon_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020e_macaroon.proto\022\tmacaroons\"\242\001\n\ne_maca"
    "roon\022\020\n\010macaroon\030\001 \002(\t\0227\n\014endorsements\030\002"
    " \003(\0132!.macaroons.e_macaroon.Endorsement\032"
    "I\n\013Endorsement\022\014\n\004kind\030\001 \002(\t\022\014\n\004name\030\002 \002"
    "(\t\022\020\n\010certname\030\003 \002(\t\022\014\n\004hash\030\004 \002(\t", 194);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "e_macaroon.proto", &protobuf_RegisterTypes);
  e_macaroon::default_instance_ = new e_macaroon();
  e_macaroon_Endorsement::default_instance_ = new e_macaroon_Endorsement();
  e_macaroon::default_instance_->InitAsDefaultInstance();
  e_macaroon_Endorsement::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_e_5fmacaroon_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_e_5fmacaroon_2eproto {
  StaticDescriptorInitializer_e_5fmacaroon_2eproto() {
    protobuf_AddDesc_e_5fmacaroon_2eproto();
  }
} static_descriptor_initializer_e_5fmacaroon_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int e_macaroon_Endorsement::kKindFieldNumber;
const int e_macaroon_Endorsement::kNameFieldNumber;
const int e_macaroon_Endorsement::kCertnameFieldNumber;
const int e_macaroon_Endorsement::kHashFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

e_macaroon_Endorsement::e_macaroon_Endorsement()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:macaroons.e_macaroon.Endorsement)
}

void e_macaroon_Endorsement::InitAsDefaultInstance() {
}

e_macaroon_Endorsement::e_macaroon_Endorsement(const e_macaroon_Endorsement& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:macaroons.e_macaroon.Endorsement)
}

void e_macaroon_Endorsement::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  kind_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

e_macaroon_Endorsement::~e_macaroon_Endorsement() {
  // @@protoc_insertion_point(destructor:macaroons.e_macaroon.Endorsement)
  SharedDtor();
}

void e_macaroon_Endorsement::SharedDtor() {
  kind_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  certname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void e_macaroon_Endorsement::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* e_macaroon_Endorsement::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_macaroon_Endorsement_descriptor_;
}

const e_macaroon_Endorsement& e_macaroon_Endorsement::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e_5fmacaroon_2eproto();
  return *default_instance_;
}

e_macaroon_Endorsement* e_macaroon_Endorsement::default_instance_ = NULL;

e_macaroon_Endorsement* e_macaroon_Endorsement::New(::google::protobuf::Arena* arena) const {
  e_macaroon_Endorsement* n = new e_macaroon_Endorsement;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void e_macaroon_Endorsement::Clear() {
// @@protoc_insertion_point(message_clear_start:macaroons.e_macaroon.Endorsement)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_kind()) {
      kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_certname()) {
      certname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_hash()) {
      hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool e_macaroon_Endorsement::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:macaroons.e_macaroon.Endorsement)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string kind = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kind()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->kind().data(), this->kind().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "macaroons.e_macaroon.Endorsement.kind");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // required string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "macaroons.e_macaroon.Endorsement.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_certname;
        break;
      }

      // required string certname = 3;
      case 3: {
        if (tag == 26) {
         parse_certname:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_certname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->certname().data(), this->certname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "macaroons.e_macaroon.Endorsement.certname");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_hash;
        break;
      }

      // required string hash = 4;
      case 4: {
        if (tag == 34) {
         parse_hash:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hash()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->hash().data(), this->hash().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "macaroons.e_macaroon.Endorsement.hash");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:macaroons.e_macaroon.Endorsement)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:macaroons.e_macaroon.Endorsement)
  return false;
#undef DO_
}

void e_macaroon_Endorsement::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:macaroons.e_macaroon.Endorsement)
  // required string kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kind().data(), this->kind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.kind");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kind(), output);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // required string certname = 3;
  if (has_certname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->certname().data(), this->certname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.certname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->certname(), output);
  }

  // required string hash = 4;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->hash(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:macaroons.e_macaroon.Endorsement)
}

::google::protobuf::uint8* e_macaroon_Endorsement::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:macaroons.e_macaroon.Endorsement)
  // required string kind = 1;
  if (has_kind()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->kind().data(), this->kind().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.kind");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kind(), target);
  }

  // required string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // required string certname = 3;
  if (has_certname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->certname().data(), this->certname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.certname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->certname(), target);
  }

  // required string hash = 4;
  if (has_hash()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->hash().data(), this->hash().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.Endorsement.hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->hash(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:macaroons.e_macaroon.Endorsement)
  return target;
}

int e_macaroon_Endorsement::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:macaroons.e_macaroon.Endorsement)
  int total_size = 0;

  if (has_kind()) {
    // required string kind = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kind());
  }

  if (has_name()) {
    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_certname()) {
    // required string certname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certname());
  }

  if (has_hash()) {
    // required string hash = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());
  }

  return total_size;
}
int e_macaroon_Endorsement::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:macaroons.e_macaroon.Endorsement)
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required string kind = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kind());

    // required string name = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required string certname = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->certname());

    // required string hash = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->hash());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void e_macaroon_Endorsement::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:macaroons.e_macaroon.Endorsement)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const e_macaroon_Endorsement* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const e_macaroon_Endorsement>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:macaroons.e_macaroon.Endorsement)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:macaroons.e_macaroon.Endorsement)
    MergeFrom(*source);
  }
}

void e_macaroon_Endorsement::MergeFrom(const e_macaroon_Endorsement& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:macaroons.e_macaroon.Endorsement)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_kind()) {
      set_has_kind();
      kind_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kind_);
    }
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_certname()) {
      set_has_certname();
      certname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.certname_);
    }
    if (from.has_hash()) {
      set_has_hash();
      hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void e_macaroon_Endorsement::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:macaroons.e_macaroon.Endorsement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void e_macaroon_Endorsement::CopyFrom(const e_macaroon_Endorsement& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:macaroons.e_macaroon.Endorsement)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool e_macaroon_Endorsement::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void e_macaroon_Endorsement::Swap(e_macaroon_Endorsement* other) {
  if (other == this) return;
  InternalSwap(other);
}
void e_macaroon_Endorsement::InternalSwap(e_macaroon_Endorsement* other) {
  kind_.Swap(&other->kind_);
  name_.Swap(&other->name_);
  certname_.Swap(&other->certname_);
  hash_.Swap(&other->hash_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata e_macaroon_Endorsement::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = e_macaroon_Endorsement_descriptor_;
  metadata.reflection = e_macaroon_Endorsement_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int e_macaroon::kMacaroonFieldNumber;
const int e_macaroon::kEndorsementsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

e_macaroon::e_macaroon()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:macaroons.e_macaroon)
}

void e_macaroon::InitAsDefaultInstance() {
}

e_macaroon::e_macaroon(const e_macaroon& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:macaroons.e_macaroon)
}

void e_macaroon::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  macaroon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

e_macaroon::~e_macaroon() {
  // @@protoc_insertion_point(destructor:macaroons.e_macaroon)
  SharedDtor();
}

void e_macaroon::SharedDtor() {
  macaroon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void e_macaroon::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* e_macaroon::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return e_macaroon_descriptor_;
}

const e_macaroon& e_macaroon::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_e_5fmacaroon_2eproto();
  return *default_instance_;
}

e_macaroon* e_macaroon::default_instance_ = NULL;

e_macaroon* e_macaroon::New(::google::protobuf::Arena* arena) const {
  e_macaroon* n = new e_macaroon;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void e_macaroon::Clear() {
// @@protoc_insertion_point(message_clear_start:macaroons.e_macaroon)
  if (has_macaroon()) {
    macaroon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  endorsements_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool e_macaroon::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:macaroons.e_macaroon)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string macaroon = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_macaroon()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->macaroon().data(), this->macaroon().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "macaroons.e_macaroon.macaroon");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_endorsements;
        break;
      }

      // repeated .macaroons.e_macaroon.Endorsement endorsements = 2;
      case 2: {
        if (tag == 18) {
         parse_endorsements:
          DO_(input->IncrementRecursionDepth());
         parse_loop_endorsements:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_endorsements()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_endorsements;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:macaroons.e_macaroon)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:macaroons.e_macaroon)
  return false;
#undef DO_
}

void e_macaroon::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:macaroons.e_macaroon)
  // required string macaroon = 1;
  if (has_macaroon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaroon().data(), this->macaroon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.macaroon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->macaroon(), output);
  }

  // repeated .macaroons.e_macaroon.Endorsement endorsements = 2;
  for (unsigned int i = 0, n = this->endorsements_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->endorsements(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:macaroons.e_macaroon)
}

::google::protobuf::uint8* e_macaroon::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:macaroons.e_macaroon)
  // required string macaroon = 1;
  if (has_macaroon()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->macaroon().data(), this->macaroon().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "macaroons.e_macaroon.macaroon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->macaroon(), target);
  }

  // repeated .macaroons.e_macaroon.Endorsement endorsements = 2;
  for (unsigned int i = 0, n = this->endorsements_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->endorsements(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:macaroons.e_macaroon)
  return target;
}

int e_macaroon::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:macaroons.e_macaroon)
  int total_size = 0;

  // required string macaroon = 1;
  if (has_macaroon()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->macaroon());
  }
  // repeated .macaroons.e_macaroon.Endorsement endorsements = 2;
  total_size += 1 * this->endorsements_size();
  for (int i = 0; i < this->endorsements_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->endorsements(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void e_macaroon::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:macaroons.e_macaroon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const e_macaroon* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const e_macaroon>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:macaroons.e_macaroon)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:macaroons.e_macaroon)
    MergeFrom(*source);
  }
}

void e_macaroon::MergeFrom(const e_macaroon& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:macaroons.e_macaroon)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  endorsements_.MergeFrom(from.endorsements_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_macaroon()) {
      set_has_macaroon();
      macaroon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.macaroon_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void e_macaroon::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:macaroons.e_macaroon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void e_macaroon::CopyFrom(const e_macaroon& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:macaroons.e_macaroon)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool e_macaroon::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->endorsements())) return false;
  return true;
}

void e_macaroon::Swap(e_macaroon* other) {
  if (other == this) return;
  InternalSwap(other);
}
void e_macaroon::InternalSwap(e_macaroon* other) {
  macaroon_.Swap(&other->macaroon_);
  endorsements_.UnsafeArenaSwap(&other->endorsements_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata e_macaroon::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = e_macaroon_descriptor_;
  metadata.reflection = e_macaroon_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// e_macaroon_Endorsement

// required string kind = 1;
bool e_macaroon_Endorsement::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void e_macaroon_Endorsement::set_has_kind() {
  _has_bits_[0] |= 0x00000001u;
}
void e_macaroon_Endorsement::clear_has_kind() {
  _has_bits_[0] &= ~0x00000001u;
}
void e_macaroon_Endorsement::clear_kind() {
  kind_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_kind();
}
 const ::std::string& e_macaroon_Endorsement::kind() const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.Endorsement.kind)
  return kind_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_kind(const ::std::string& value) {
  set_has_kind();
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:macaroons.e_macaroon.Endorsement.kind)
}
 void e_macaroon_Endorsement::set_kind(const char* value) {
  set_has_kind();
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:macaroons.e_macaroon.Endorsement.kind)
}
 void e_macaroon_Endorsement::set_kind(const char* value, size_t size) {
  set_has_kind();
  kind_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:macaroons.e_macaroon.Endorsement.kind)
}
 ::std::string* e_macaroon_Endorsement::mutable_kind() {
  set_has_kind();
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.Endorsement.kind)
  return kind_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* e_macaroon_Endorsement::release_kind() {
  // @@protoc_insertion_point(field_release:macaroons.e_macaroon.Endorsement.kind)
  clear_has_kind();
  return kind_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_allocated_kind(::std::string* kind) {
  if (kind != NULL) {
    set_has_kind();
  } else {
    clear_has_kind();
  }
  kind_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), kind);
  // @@protoc_insertion_point(field_set_allocated:macaroons.e_macaroon.Endorsement.kind)
}

// required string name = 2;
bool e_macaroon_Endorsement::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void e_macaroon_Endorsement::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
void e_macaroon_Endorsement::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void e_macaroon_Endorsement::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& e_macaroon_Endorsement::name() const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.Endorsement.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:macaroons.e_macaroon.Endorsement.name)
}
 void e_macaroon_Endorsement::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:macaroons.e_macaroon.Endorsement.name)
}
 void e_macaroon_Endorsement::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:macaroons.e_macaroon.Endorsement.name)
}
 ::std::string* e_macaroon_Endorsement::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.Endorsement.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* e_macaroon_Endorsement::release_name() {
  // @@protoc_insertion_point(field_release:macaroons.e_macaroon.Endorsement.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:macaroons.e_macaroon.Endorsement.name)
}

// required string certname = 3;
bool e_macaroon_Endorsement::has_certname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void e_macaroon_Endorsement::set_has_certname() {
  _has_bits_[0] |= 0x00000004u;
}
void e_macaroon_Endorsement::clear_has_certname() {
  _has_bits_[0] &= ~0x00000004u;
}
void e_macaroon_Endorsement::clear_certname() {
  certname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_certname();
}
 const ::std::string& e_macaroon_Endorsement::certname() const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.Endorsement.certname)
  return certname_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_certname(const ::std::string& value) {
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:macaroons.e_macaroon.Endorsement.certname)
}
 void e_macaroon_Endorsement::set_certname(const char* value) {
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:macaroons.e_macaroon.Endorsement.certname)
}
 void e_macaroon_Endorsement::set_certname(const char* value, size_t size) {
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:macaroons.e_macaroon.Endorsement.certname)
}
 ::std::string* e_macaroon_Endorsement::mutable_certname() {
  set_has_certname();
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.Endorsement.certname)
  return certname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* e_macaroon_Endorsement::release_certname() {
  // @@protoc_insertion_point(field_release:macaroons.e_macaroon.Endorsement.certname)
  clear_has_certname();
  return certname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_allocated_certname(::std::string* certname) {
  if (certname != NULL) {
    set_has_certname();
  } else {
    clear_has_certname();
  }
  certname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), certname);
  // @@protoc_insertion_point(field_set_allocated:macaroons.e_macaroon.Endorsement.certname)
}

// required string hash = 4;
bool e_macaroon_Endorsement::has_hash() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void e_macaroon_Endorsement::set_has_hash() {
  _has_bits_[0] |= 0x00000008u;
}
void e_macaroon_Endorsement::clear_has_hash() {
  _has_bits_[0] &= ~0x00000008u;
}
void e_macaroon_Endorsement::clear_hash() {
  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_hash();
}
 const ::std::string& e_macaroon_Endorsement::hash() const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.Endorsement.hash)
  return hash_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_hash(const ::std::string& value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:macaroons.e_macaroon.Endorsement.hash)
}
 void e_macaroon_Endorsement::set_hash(const char* value) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:macaroons.e_macaroon.Endorsement.hash)
}
 void e_macaroon_Endorsement::set_hash(const char* value, size_t size) {
  set_has_hash();
  hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:macaroons.e_macaroon.Endorsement.hash)
}
 ::std::string* e_macaroon_Endorsement::mutable_hash() {
  set_has_hash();
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.Endorsement.hash)
  return hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* e_macaroon_Endorsement::release_hash() {
  // @@protoc_insertion_point(field_release:macaroons.e_macaroon.Endorsement.hash)
  clear_has_hash();
  return hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon_Endorsement::set_allocated_hash(::std::string* hash) {
  if (hash != NULL) {
    set_has_hash();
  } else {
    clear_has_hash();
  }
  hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hash);
  // @@protoc_insertion_point(field_set_allocated:macaroons.e_macaroon.Endorsement.hash)
}

// -------------------------------------------------------------------

// e_macaroon

// required string macaroon = 1;
bool e_macaroon::has_macaroon() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void e_macaroon::set_has_macaroon() {
  _has_bits_[0] |= 0x00000001u;
}
void e_macaroon::clear_has_macaroon() {
  _has_bits_[0] &= ~0x00000001u;
}
void e_macaroon::clear_macaroon() {
  macaroon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_macaroon();
}
 const ::std::string& e_macaroon::macaroon() const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.macaroon)
  return macaroon_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon::set_macaroon(const ::std::string& value) {
  set_has_macaroon();
  macaroon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:macaroons.e_macaroon.macaroon)
}
 void e_macaroon::set_macaroon(const char* value) {
  set_has_macaroon();
  macaroon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:macaroons.e_macaroon.macaroon)
}
 void e_macaroon::set_macaroon(const char* value, size_t size) {
  set_has_macaroon();
  macaroon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:macaroons.e_macaroon.macaroon)
}
 ::std::string* e_macaroon::mutable_macaroon() {
  set_has_macaroon();
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.macaroon)
  return macaroon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* e_macaroon::release_macaroon() {
  // @@protoc_insertion_point(field_release:macaroons.e_macaroon.macaroon)
  clear_has_macaroon();
  return macaroon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void e_macaroon::set_allocated_macaroon(::std::string* macaroon) {
  if (macaroon != NULL) {
    set_has_macaroon();
  } else {
    clear_has_macaroon();
  }
  macaroon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), macaroon);
  // @@protoc_insertion_point(field_set_allocated:macaroons.e_macaroon.macaroon)
}

// repeated .macaroons.e_macaroon.Endorsement endorsements = 2;
int e_macaroon::endorsements_size() const {
  return endorsements_.size();
}
void e_macaroon::clear_endorsements() {
  endorsements_.Clear();
}
const ::macaroons::e_macaroon_Endorsement& e_macaroon::endorsements(int index) const {
  // @@protoc_insertion_point(field_get:macaroons.e_macaroon.endorsements)
  return endorsements_.Get(index);
}
::macaroons::e_macaroon_Endorsement* e_macaroon::mutable_endorsements(int index) {
  // @@protoc_insertion_point(field_mutable:macaroons.e_macaroon.endorsements)
  return endorsements_.Mutable(index);
}
::macaroons::e_macaroon_Endorsement* e_macaroon::add_endorsements() {
  // @@protoc_insertion_point(field_add:macaroons.e_macaroon.endorsements)
  return endorsements_.Add();
}
::google::protobuf::RepeatedPtrField< ::macaroons::e_macaroon_Endorsement >*
e_macaroon::mutable_endorsements() {
  // @@protoc_insertion_point(field_mutable_list:macaroons.e_macaroon.endorsements)
  return &endorsements_;
}
const ::google::protobuf::RepeatedPtrField< ::macaroons::e_macaroon_Endorsement >&
e_macaroon::endorsements() const {
  // @@protoc_insertion_point(field_list:macaroons.e_macaroon.endorsements)
  return endorsements_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace macaroons

// @@protoc_insertion_point(global_scope)
